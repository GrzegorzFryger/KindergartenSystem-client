#!/bin/sh
#
# Called by "git commit". The hook's purpose is to edit the commit message file. 
# If the hook fails with a non-zero status, the commit is aborted.
# 
# Inputs to reuse in script:
# COMMIT_MSG_FILE=$1
# COMMIT_SOURCE=$2
# SHA1=$3
NC='\033[0m'    # NO COLOR
LY='\033[1;33m' # LIGHT YELLOW

subject="# Summary of change (up to 50 characters)"
description="# Description why change was made (up to 72 characters per line)"

# Standard template - subject + description
standardTemplate="1s/^/$subject\n\n\n$description\n\n/"

# If there is already some commit message, prevent from adding template to it.
# Such case may occur when you use "git commit --amend".
# Below if statement counts uncommented lines.
if [[ $(sed -n '/^[a-zA-Z0-9]/p' $1 | wc -l) -eq 0 ]]; then
		sed -i.bak -e "$standardTemplate" $1
else
	printf "${LY}[INFO] You are ammending already existing commit message. No template will be added.${NC}\n"
fi